upstream puma {
  server unix:///home/deployer/apps/geekspeak.org/shared/tmp/sockets/geekspeak.org-puma.sock;
}

# Use a cache called "STATIC" and save to /var/cache/nginx with a 2-level lookup hash.
# Cache entries can live up to three days before being purged from the system.
proxy_cache_path  /var/cache/nginx  levels=1:2  keys_zone=STATIC:10m  inactive=72h  max_size=100m;

server {
  listen 80 default deferred;
  listen 443 ssl;
  server_name geekspeak.org play.geekspeak.org;
    ssl_certificate /etc/letsencrypt/live/geekspeak.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/geekspeak.org/privkey.pem;
    #ssl_certificate     /home/deployer/.ssh/geekspeak.unified.crt;
    #ssl_certificate_key /home/deployer/.ssh/geekspeak.ssl_unencrypted.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/ssl/certs/dhparams.pem;

  root /home/deployer/apps/geekspeak.org/current/public;
  access_log /home/deployer/apps/geekspeak.org/shared/log/nginx.access.log;
  error_log /home/deployer/apps/geekspeak.org/shared/log/nginx.error.log info;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
  location ~* \.(mp3)$ {
    expires 168h;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }
  location /logs {
    if ($scheme = 'http') {
      rewrite ^ https://$http_host$request_uri? permanent;
    }
    proxy_pass http://localhost:8000;
    auth_basic "GeekSpeak Geeks Only";
    auth_basic_user_file auth;
  }
  location = /episodes/rss.xml {
    add_header X-Cache-Status $upstream_cache_status;  # So we can instrument
    proxy_cache STATIC;  # Refers to the cache directory at the top
    proxy_cache_valid 200 10m;  # 10 minutes stale max while Rails is up
    proxy_cache_valid any 1m;  # 1 minute stale for everything else
    # Keep serving from cache for up to 3 days (see cache config at top) if Rails goes down
    # When rails comes back, will revert back to previous behavior
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    proxy_cache_lock on;  # On multiple requests, only hit the backend once. The rest wait for the response
  }

  rewrite ^/shows/rss.xml$ /episodes/rss.xml permanent ;
  rewrite ^/shows/npr-feed.xml$ /episodes/rss.xml permanent ;
  # serve npr's podcast if someone asks for our older rss
  # rewrite ^/shows/rss.xml$ http://www.npr.org/rss/podcast.php?id=510168 ;
  # move the individule show pages to the episodes url but remove index.html
  rewrite "/shows/([0-9]{4}.*)index.html" /episodes/$1 permanent;
  # move the individule show pages to the episodes url.. /2012 and anything after
  rewrite "/shows/([0-9]{4}.*)" /episodes/$1 permanent;
  # move the shows listing page to the episodes listing page
  rewrite ^/shows/?$ /episodes/ permanent;


  try_files $uri/index.html $uri @puma;
  location @puma {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}


server {
  server_name www.geekspeak.org;
  return 301 $scheme://GeekSpeak.org$request_uri;
}
